{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"table_extract","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"uNK_EK5FUkYw","colab_type":"code","outputId":"be521a7d-f342-48e8-98b2-8d8ea0aaa45e","executionInfo":{"status":"error","timestamp":1567082564152,"user_tz":-330,"elapsed":854,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":367}},"source":["#!/usr/bin/env python\n","# coding: utf-8\n","\n","# In[18]:\n","# Using PyPDF2\n","import tabula\n","\n","# Read pdf into DataFrame\n","\n","import PyPDF2\n","def pypdf2(file_name):\n","  file=open(file_name,'rb')\n","  pdfobj=PyPDF2.PdfFileReader(file)\n","  total_pages=pdfobj.numPages\n","#   print(total_pages)\n","  text=''\n","  for page in range(0,total_pages):\n","    df = tabula.read_pdf(\"/content/9_sw.pdf\", pages=page+1, multiple_tables=True)\n","    print(df)\n","    pageobj=pdfobj.getPage(page)\n","    text+=' '+pageobj.extractText()\n","  return text\n","def main(file_name):\n","    text=pypdf2(file_name)\n","    return text\n","  \n","main(\"/content/CRB_Proposal.pdf\")\n","# In[20]:"],"execution_count":4,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-ed247c95aafc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Read pdf into DataFrame\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mPyPDF2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mpypdf2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m   \u001b[0mfile\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_name\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'PyPDF2'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"code","metadata":{"id":"HReiZcRit6YD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":367},"outputId":"7c732286-5bed-4983-b1b1-bd8078e86c9e","executionInfo":{"status":"error","timestamp":1567082556439,"user_tz":-330,"elapsed":874,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}}},"source":["\n","#Using pdfminer\n","from pdfminer.pdfinterp import PDFResourceManager,PDFPageInterpreter\n","from pdfminer.converter import TextConverter\n","from pdfminer.layout import LAParams\n","from pdfminer.pdfpage import PDFPage\n","from io import BytesIO\n","def pdfminer_algo(file_name):\n","    manager = PDFResourceManager()\n","    retstr = BytesIO()\n","    layout = LAParams(all_texts=True)\n","    device = TextConverter(manager, retstr, laparams=layout)\n","    filepath = open(file_name, 'rb')\n","    interpreter = PDFPageInterpreter(manager, device)\n","    for page in PDFPage.get_pages(filepath, check_extractable=True):\n","        interpreter.process_page(page)\n","    text = retstr.getvalue()\n","    filepath.close()\n","    device.close()\n","    retstr.close()\n","    return text.decode()\n","\n","def main(file_name):\n","    text=pdfminer_algo(file_name)\n","    return text\n","  \n","new_text = main(\"/content/CRB_Proposal.pdf\")"],"execution_count":3,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-91f8bc706836>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mpdfminer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpdfinterp\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mPDFResourceManager\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mPDFPageInterpreter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpdfminer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverter\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mTextConverter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpdfminer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayout\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mLAParams\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpdfminer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpdfpage\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mPDFPage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mio\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pdfminer'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"code","metadata":{"id":"tSIWrCDP7YGe","colab_type":"code","outputId":"4fae6d89-5ede-489b-9870-585f2147b008","executionInfo":{"status":"ok","timestamp":1567082553710,"user_tz":-330,"elapsed":5707,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"source":["pip install tabula-py"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Collecting tabula-py\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/78/e0/895cbb704f00d962a6714076b605463f3a03a42e70337f4b67be66972df6/tabula_py-1.4.1-py3-none-any.whl (10.4MB)\n","\u001b[K     |████████████████████████████████| 10.4MB 2.8MB/s \n","\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from tabula-py) (0.24.2)\n","Collecting distro (from tabula-py)\n","  Downloading https://files.pythonhosted.org/packages/ea/35/82f79b92fa4d937146c660a6482cee4f3dfa1f97ff3d2a6f3ecba33e712e/distro-1.4.0-py2.py3-none-any.whl\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from tabula-py) (1.16.4)\n","Requirement already satisfied: python-dateutil>=2.5.0 in /usr/local/lib/python3.6/dist-packages (from pandas->tabula-py) (2.5.3)\n","Requirement already satisfied: pytz>=2011k in /usr/local/lib/python3.6/dist-packages (from pandas->tabula-py) (2018.9)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.5.0->pandas->tabula-py) (1.12.0)\n","Installing collected packages: distro, tabula-py\n","Successfully installed distro-1.4.0 tabula-py-1.4.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6hUpVPYaQBeb","colab_type":"code","outputId":"8cc55cab-3ba1-4e8e-bd86-2354cd8f7a4b","executionInfo":{"status":"ok","timestamp":1566446966491,"user_tz":-330,"elapsed":6297,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":207}},"source":["pip install pyPdf2"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting pyPdf2\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/b4/01/68fcc0d43daf4c6bdbc6b33cc3f77bda531c86b174cac56ef0ffdb96faab/PyPDF2-1.26.0.tar.gz (77kB)\n","\u001b[K     |████████████████████████████████| 81kB 1.9MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyPdf2\n","  Building wheel for pyPdf2 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyPdf2: filename=PyPDF2-1.26.0-cp36-none-any.whl size=61086 sha256=59e42dce676c28afdf060b4e94aa9e0f525dd6e9c8a20d3ee07b2d5d2fe5a4a5\n","  Stored in directory: /root/.cache/pip/wheels/53/84/19/35bc977c8bf5f0c23a8a011aa958acd4da4bbd7a229315c1b7\n","Successfully built pyPdf2\n","Installing collected packages: pyPdf2\n","Successfully installed pyPdf2-1.26.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Fw_1GQ467t8S","colab_type":"code","outputId":"5f06ab6f-d416-485d-9a91-5afe674297cf","executionInfo":{"status":"ok","timestamp":1567082672685,"user_tz":-330,"elapsed":3086,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":297}},"source":["import tabula\n","\n","# Read pdf into DataFrame\n","# tabula.convert_into(\"/content/Food Calories List.pdf\", \"output.csv\", output_format=\"csv\", pages='all')\n","\n","df = tabula.read_pdf(\"/content/9_sw.pdf\", pages='1')\n","# df = df.loc[:, ~df.columns.str.contains('^Unnamed')]\n","df\n"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>“</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>char \\</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ShOI‘t int \\</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>int \\</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>long int \\</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>float \\</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>double \\ W-h-h-hNA</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>long double \\ 12</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>VOid \\ MEANING LESS</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     “\n","0               char \\\n","1         ShOI‘t int \\\n","2                int \\\n","3           long int \\\n","4              float \\\n","5   double \\ W-h-h-hNA\n","6     long double \\ 12\n","7  VOid \\ MEANING LESS"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"SFGUhWFHlEkF","colab_type":"code","outputId":"5e0d04f4-6efd-4bd7-e4bd-526c42470b07","executionInfo":{"status":"ok","timestamp":1566448604205,"user_tz":-330,"elapsed":858,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["import pandas as pd\n","csv_file = pd.DataFrame(pd.read_csv(\"/content/output.csv\",error_bad_lines=False, sep = \",\", header = 0, index_col = False))\n","csv_file.to_json(\"/content/file.json\", orient = \"records\", date_format = \"epoch\", double_precision = 10, force_ascii = True, date_unit = \"ms\", default_handler = None)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["b'Skipping line 30: expected 5 fields, saw 9\\nSkipping line 31: expected 5 fields, saw 9\\nSkipping line 32: expected 5 fields, saw 9\\nSkipping line 33: expected 5 fields, saw 9\\nSkipping line 34: expected 5 fields, saw 9\\nSkipping line 35: expected 5 fields, saw 9\\nSkipping line 36: expected 5 fields, saw 9\\nSkipping line 37: expected 5 fields, saw 9\\nSkipping line 38: expected 5 fields, saw 9\\nSkipping line 39: expected 5 fields, saw 9\\nSkipping line 40: expected 5 fields, saw 9\\nSkipping line 41: expected 5 fields, saw 9\\nSkipping line 42: expected 5 fields, saw 9\\nSkipping line 43: expected 5 fields, saw 9\\nSkipping line 44: expected 5 fields, saw 9\\nSkipping line 86: expected 5 fields, saw 9\\nSkipping line 87: expected 5 fields, saw 9\\nSkipping line 88: expected 5 fields, saw 9\\nSkipping line 89: expected 5 fields, saw 9\\nSkipping line 90: expected 5 fields, saw 9\\nSkipping line 91: expected 5 fields, saw 9\\nSkipping line 92: expected 5 fields, saw 9\\nSkipping line 93: expected 5 fields, saw 9\\nSkipping line 94: expected 5 fields, saw 9\\nSkipping line 95: expected 5 fields, saw 9\\nSkipping line 96: expected 5 fields, saw 9\\nSkipping line 97: expected 5 fields, saw 9\\nSkipping line 98: expected 5 fields, saw 9\\nSkipping line 99: expected 5 fields, saw 9\\nSkipping line 100: expected 5 fields, saw 9\\nSkipping line 101: expected 5 fields, saw 9\\nSkipping line 102: expected 5 fields, saw 9\\nSkipping line 103: expected 5 fields, saw 9\\nSkipping line 104: expected 5 fields, saw 9\\nSkipping line 105: expected 5 fields, saw 9\\nSkipping line 106: expected 5 fields, saw 9\\nSkipping line 107: expected 5 fields, saw 9\\nSkipping line 108: expected 5 fields, saw 9\\n'\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"wyZt_h_yDVa4","colab_type":"code","outputId":"b21e5e47-8ad6-4e09-eee8-88784e289aa4","executionInfo":{"status":"ok","timestamp":1566388915477,"user_tz":-330,"elapsed":5123,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":292}},"source":["pip install camelot-py"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: camelot-py in /usr/local/lib/python3.6/dist-packages (0.7.3)\n","Requirement already satisfied: click>=6.7 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (7.0)\n","Requirement already satisfied: pdfminer.six>=20170720 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (20181108)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (1.16.4)\n","Requirement already satisfied: pandas>=0.23.4 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (0.24.2)\n","Requirement already satisfied: openpyxl>=2.5.8 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (2.5.9)\n","Requirement already satisfied: PyPDF2>=1.26.0 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (1.26.0)\n","Requirement already satisfied: chardet>=3.0.4 in /usr/local/lib/python3.6/dist-packages (from camelot-py) (3.0.4)\n","Requirement already satisfied: pycryptodome in /usr/local/lib/python3.6/dist-packages (from pdfminer.six>=20170720->camelot-py) (3.8.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from pdfminer.six>=20170720->camelot-py) (1.12.0)\n","Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.6/dist-packages (from pdfminer.six>=20170720->camelot-py) (2.1.0)\n","Requirement already satisfied: pytz>=2011k in /usr/local/lib/python3.6/dist-packages (from pandas>=0.23.4->camelot-py) (2018.9)\n","Requirement already satisfied: python-dateutil>=2.5.0 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.23.4->camelot-py) (2.5.3)\n","Requirement already satisfied: jdcal in /usr/local/lib/python3.6/dist-packages (from openpyxl>=2.5.8->camelot-py) (1.4.1)\n","Requirement already satisfied: et-xmlfile in /usr/local/lib/python3.6/dist-packages (from openpyxl>=2.5.8->camelot-py) (1.0.1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"HpV4Hch5EZYp","colab_type":"code","outputId":"b20534d2-4fae-4cb4-c810-792e545c3b1b","executionInfo":{"status":"ok","timestamp":1567082614238,"user_tz":-330,"elapsed":6253,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":207}},"source":["pip install PyPDF2"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Collecting PyPDF2\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/b4/01/68fcc0d43daf4c6bdbc6b33cc3f77bda531c86b174cac56ef0ffdb96faab/PyPDF2-1.26.0.tar.gz (77kB)\n","\u001b[K     |████████████████████████████████| 81kB 3.1MB/s \n","\u001b[?25hBuilding wheels for collected packages: PyPDF2\n","  Building wheel for PyPDF2 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for PyPDF2: filename=PyPDF2-1.26.0-cp36-none-any.whl size=61086 sha256=ade0cd774a32dbbdbba6749090497464ce37046243e6dc9af4764bf2fb4f2dee\n","  Stored in directory: /root/.cache/pip/wheels/53/84/19/35bc977c8bf5f0c23a8a011aa958acd4da4bbd7a229315c1b7\n","Successfully built PyPDF2\n","Installing collected packages: PyPDF2\n","Successfully installed PyPDF2-1.26.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mg3zKJJNEc97","colab_type":"code","outputId":"8e615b5a-cb06-4867-a1d8-f422235d5a63","executionInfo":{"status":"ok","timestamp":1567082623203,"user_tz":-330,"elapsed":868,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["import PyPDF2\n","pdf_file = open('/content/9_sw.pdf', 'rb')\n","read_pdf = PyPDF2.PdfFileReader(pdf_file)\n","number_of_pages = read_pdf.getNumPages()\n","page = read_pdf.getPage(0)\n","page_content = page.extractText()\n","print (page_content.encode('utf-8'))"],"execution_count":8,"outputs":[{"output_type":"stream","text":["b'\\xef\\xac\\x81char\\\\ShOI\\xe2\\x80\\x9atint\\\\int\\\\longint\\\\float\\\\\\\\\\n\\\\\\n\\\\W-h-h-hNAdoublelongdouble12VOidMEANINGLESS'\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Uxvunj9JEgRg","colab_type":"code","outputId":"0bc11063-b714-4ddb-ac5c-4575836b7d8e","executionInfo":{"status":"ok","timestamp":1566391837914,"user_tz":-330,"elapsed":910,"user":{"displayName":"Saurabh Kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBttMcU30JThjsbyn5xGJw0WSLLoV0shNIyS2jZ=s64","userId":"11443495427741628084"}},"colab":{"base_uri":"https://localhost:8080/","height":561}},"source":["import numpy\n","\n","table_list = page_content.split('\\n')\n","l = numpy.array_split(table_list, len(table_list)/4)\n","for i in range(0,len(l)):\n","    print(l[i])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[' Fish cake' ' 90 cals per cake' ' 200 cals' ' Medium']\n","[' Fish fingers' ' 50 cals per piece' ' 220 cals' ' Medium']\n","[' Gammon' ' 320 cals' ' 280 cals' ' Med']\n","['-High' ' Haddock fresh' ' 200 cals' ' 110 cals']\n","[' Low calorie' ' Halibut fresh' ' 220 cals' ' 125 cals']\n","[' Low calorie' ' Ha' 'm 6 cals' ' 240 cals']\n","[' Medium' ' Herring fresh grilled' ' 300 cals' ' 200 cals']\n","[' Medium' ' Kidney' ' 200 cals' ' 160 cals']\n","[' Medium' ' Kipper' ' 200 cals' ' 120 cals']\n","[' Low calorie' ' Liver' ' 200 cals' ' 150 cals']\n","[' Medium' ' Liver' ' pate' ' 150 cals']\n","[' 300 cals' ' Medium' ' Lamb (roast)' ' 300 cals']\n","[' 300 cals' ' Med' '-High' ' Lobster boiled']\n","[' 200 cals' ' 100 cals' ' Low calorie' ' Luncheon meat']\n","[' 300 cals' ' 400 cals' ' High' ' Mackeral']\n","[' 320 cals' ' 300 cal' 's Medium' ' Mussels']\n","[' 90 cals' ' 90 cals' ' Low' '-Med']\n","[' Pheasant roast' ' 200 cals' ' 200 cals' ' Medium']\n","[' Pilchards (tinned)' ' 140 cals' ' 140 cals' ' Medium']\n","[' Prawns' ' 180 cals' ' 100 cals' ' Low']\n","['- Med' ' Pork ' ' 320 cals' ' 290 cals']\n","[' Med' '-High' ' Pork pie' ' 320 cals']\n","[' 450 cals' ' High' ' Rabbit' ' 200 cals']\n","[' 180 cals' ' Medium' ' Salmon fresh' ' 220 cals']\n","[' 180 cals' ' Medium' ' Sardines tinned in oil' ' 220 cals']\n","[' 220 cals' ' Medium' ' Sardines in tomato sauce' ' 180 cals']\n","[' 180 cals' ' Medium' ' Sausage pork fried' ' 250 cals']\n","[' 320 cals' ' High' ' Sausage pork grilled' ' 220 cals']\n","[' 280 cals' ' Med' '-High' ' Sausage roll']\n","[' 290 cals' ' 480 cals' ' High' ' Scampi fried in oil']\n","[' 400 cals' ' 340 cals' ' High' ' Steak & kidney pie']\n","[' 400 cals' ' 350 cals' ' High' ' ']\n"],"name":"stdout"}]}]}